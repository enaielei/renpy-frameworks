init python in utils:
    renpy.load_module("scripts/utils/record")

    import store
    from store import config, Function, Start

    class Episode(Record):
        PREFIX = "ep"
        BEGINNING = "beginning"
        ENDING = "ending"

        current = None

        @property
        def tag(self): return "{}{}".format(self.__class__.PREFIX, self.number)

        @property
        def number(self): return self.id + 1

        @property
        def beginning(self):
            l = "{}_{}".format(self.tag, self.__class__.BEGINNING)
            return l if renpy.has_label(l) else ""

        @property
        def ending(self):
            l = "{}_{}".format(self.tag, self.__class__.ENDING)
            return l if renpy.has_label(l) else ""

        @property
        def played(self):
            return renpy.seen_label(self.beginning) and \
                renpy.seen_label(self.ending)

        def __init__(self, title=None, description=None, displayable=None):
            Record.__init__(
                self,
                title=title,
                description=description,
                displayable=displayable
            )

        def play(self):
            if self.beginning: renpy.run(Start(self.beginning))

        def Play(self):
            return Function(self.play)

        @classmethod
        def initialize(cls):
            ocb = config.label_callback
            def cb(name, flag):
                if ocb: ocb(name, flag)
                tag, _, _ = name.partition("_")
                cls.current = cls.get(lambda e: e.tag == tag)
            config.label_callback = cb